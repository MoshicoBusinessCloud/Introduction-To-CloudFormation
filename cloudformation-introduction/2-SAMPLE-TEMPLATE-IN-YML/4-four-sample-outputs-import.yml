# In this template we are going to learn about outputs & importing values from cross stacks
# Use of outputs, exports, imports
# !ImportValue intrinsic function
# Ref: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html

---
AWSTemplateFormatVersion: '2010-09-09'  # --This tells you the template version
Description: 'Cloudformation template to create EC2 instance' # --This is to desribe what the template is about
Parameters:  # --The parameter section is used to avoid hardcoding and to make the template [Dynamic]. [Indent [here] before starting next line]
  InstanceType: # --Enter [LogicalName] This InstanceType will be Ref in the resource section. [Indent [here] before starting next line]
      Description: WebServer EC2 instance type  # --This is to desribe what the parameter about
      Type: AWS::SSM::Parameter::Value<String> # --Type here is using AWS Specific SSM parameter to store the instancetype in the parameterstore.
      Default: /jjtech/ec2/instancetype # --The InstanceType is stored using this link in the paramerstore and is being Ref here.
      # --To do this, go to ssm console --parameterstore and create parameter and put the instancetype in the value section.
      ConstraintDescription: must be a valid EC2 instance type.  # --A string that explains a constraint when the constraint is violated.
      # --For example, without a constraint description you will get error message that doesn't explains what the problem is.
  AMIID:   # --Enter [LogicalName] This InstanceType will be Ref in the resource section. [Indent [here] before starting next line]
    Description: The EC2 AMI id   # --This is to desribe what the parameter about
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>' # --Type here is using AWS Specific SSM parameter to store the instancetype in the parameterstore.
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2' # --Using the latest AMIID link here makes the template more dynamic.
    # --one, it allowed you not to hardcode an amiid here and save you time from constantly having to change the AMIID every so often.
    # --To do this, go to ssm console --parameterstore and click on [Public parameters] --click on [Select a service]
    # --Select [ami-amazon-linux-latest] and then copy link for latest ami and paste here. And it is ready to Referenced [Ref].
    # --With this parameter you can run and launch this template in any account or any region.
    ConstraintDescription: Must be a valid AMI based on the region  # --A string that explains a constraint when the constraint is violated.

  VolumeSize: # --Enter [LogicalName] This InstanceType will be Ref in the resource section. [Indent [here] before starting next line]
    Description: EBS Volume size  # --This is to desribe what the parameter about
    Type: Number   # --This parameter type is an integer. [Type, Default, and Description are in the same line]
    Default: 8  # --The default is used to assigned one specific instancetype to be use by the resource.
    MinValue: 8  # --Using MinValue allows you to defined the minimum size of volume that the user can use
    MaxValue: 100  # --Using MixValue allows you to defined the miximum size of volume that the user can use
    ConstraintDescription: must be a number between 8 to 100 Gb # --And the Constraint is use to describe the rules.

  KeyName: # --Enter [LogicalName] This InstanceType will be Ref in the resource section. [Indent [here] before starting next line]
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance # --This is to desribe what the parameter about
    Type: AWS::EC2::KeyPair::KeyName # --Using AWS native here makes the template more dynamic and give the user...
    # --access to their keypairs and the ability to select what keypair that they want to use in the region they are working from.
    ConstraintDescription: must be the name of an existing EC2 KeyPair.  # --And the Constraint is use to describe the rules.

Resources:  # --The Resource section is manditory for a template to be valid. Indent once, then enter [logicalName --WebServer].
  WebServer:   #-- this part is for the logicalName. Indent once, then enter [Type:].
    Type: AWS::EC2::Instance # --This section tells you what type of resource that is being created.
    Properties:   # --Everything that the resource need to operate is under the property section
      ImageId:  # --The ImageId here is being Ref from the parameter section. [1]
        Ref: AMIID
      InstanceType:   # --The InstanceType here is being Ref from the parameter section. [2]
        Ref: InstanceType
      SecurityGroupIds:  # --The Security Group Id here is being Imported with the ImportValue intrinsic function from a cross ref exported stack
      - !ImportValue WebSeverSecurityGroupId # --The intrinsic function Fn::ImportValue returns the value of an output exported by another stack.
      # --The [WebSeverSecurityGroupId] is the Name of the Security Group that was exported from the output section. [3]
      KeyName:
        Ref: KeyName    # --The KeyPair here is being Ref from the parameter section. [4]
      BlockDeviceMappings:
        -
          DeviceName: /dev/xvda  #--This is mounting port for which to attach your EBS volume
          Ebs:
            VolumeType: gp2  # --This tells you the volume type
            DeleteOnTermination: true   #--This is a Boolean
            VolumeSize: !Ref VolumeSize  # --The VolumeSize here is being Ref from the parameter section. [5]
