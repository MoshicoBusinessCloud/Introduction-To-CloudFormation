AWSTemplateFormatVersion: 2010-09-09  # --This tells you the template version
Description: Configure the AWSCloudFormationStackSetExecutionRole to enable use of your account as a target account in AWS CloudFormation StackSets.

#--AWS CloudFormation StackSets extends the capability of stacks by enabling you to create, update, or...
# --delete stacks across multiple accounts and AWS Regions with a single operation. Using an administrator...
# --account, you define and manage an AWS CloudFormation template, and use the template as the basis...
# --for provisioning stacks into selected target accounts across specified AWS Regions

# ----------WHEN LAUNCHING THIS TEMPLATE YOU WILL BE PROMPTED TO ENTER YOUR AWS ACCOUNT ID-------------#

Parameters: # --The parameter section is used to avoid hardcoding and to make the template [Dynamic]. [Indent [here] before starting next line]
  AdministratorAccountId: # --Enter [LogicalName] This [AdministratorAccountId] will be Ref in the resource section. [Indent [here] before starting next line]
    Type: String # --This parameter type is a string. [Type, Default, and Description are in the same line]
    Description: AWS Account Id of the administrator account (the account in which StackSets will be created).
    MaxLength: 12 # --Using MinValue allows you to defined the minimum size of volume that the user can use
    MinLength: 12 # --Using MixValue allows you to defined the miximum size of volume that the user can use

Resources: # --The Resource section is manditory for a template to be valid. Indent once, then enter [logicalName --WebServer].
  ExecutionRole: # --Enter [LogicalName]. [Indent [here] before starting next line]
    Type: AWS::IAM::Role  # --This section tells you what type of resource that is being created.
    Properties:  # --Everything that the resource need to operate is under the property section
      RoleName: AWSCloudFormationStackSetExecutionRole # --The name of the role [The [Role] here is being given Administrator authorization]
      AssumeRolePolicyDocument: # --As an [Administrator] the role has been given the power to [AssumeRole] [To act on bahalf of]
        Version: 2012-10-17 # --To see the document with taht exact policy, checkout -->>[Version: 2012-10-17]
        Statement: # --Statement of what that is being [Allowed] and what service is allowed to take this actions on our behalf.
          - Effect: Allow  # --What ever effect this is going to have, it allowed.
            Principal:
              AWS:
                - !Ref AdministratorAccountId  # --The AdministratorAccountId here is being Ref from the parameter section. [2]
            Action:
              - sts:AssumeRole # --This is the action that will be carried out on our behalf
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess  # --This is signed copy of the [Agreement]
        # --As an [Administrator] the role has been given the power to [AssumeRole] [To act on bahalf of] [ExecutionRole]
        # --And with the [ExecutionRole] it has a [FullAdminAccess] to create, update, and delete stack on our behalf.
        # --To create a stack-sets, click on [stack sets] -->click on [Self-service permission]
        # --Selrct IAM role name -->>[AWSCloudFormationStackSetsAdministrationRole]
        # --Under IAM execution role name; Leave as default -->>[AWSCloudFormationStackSetExecutionRole]
        # --Scroll down and click on -->[Upload a template file] click on upload a file and upload the [3-three-sample-ec2.yml]
